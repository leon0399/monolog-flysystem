name: Tests / PHPUnit

on:
  pull_request:
  push:
    branches:
      - main
      - develop
      - release/**

jobs:
  php-tests:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        php: [7.3, 7.4, 8.0, 8.1, 8.2]
        stability: [prefer-lowest, prefer-stable]
        os: [ubuntu-latest]
        coverage: [none]

        include:
          - php: 7.4
            stability: prefer-stable
            os: ubuntu-latest
            coverage: xdebug

    name: '[PHP ${{ matrix.php }}] [${{ matrix.stability }} stability] [${{ matrix.coverage }} coverage]'

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring json openssl
          coverage: ${{ matrix.coverage }}
          ini-values: memory_limit=-1

      - name: Setup Problem Matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ runner.os }}-${{ matrix.php }}-${{ matrix.stability }}-${{ hashFiles('composer.json') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php }}-${{ matrix.stability }}-
            composer-${{ runner.os }}-${{ matrix.php }}-
            composer-${{ runner.os }}-
            composer-

      - name: Install dependencies
        run: composer update --no-progress --${{ matrix.stability }} --prefer-dist --no-interaction --no-suggest

      - name: Execute tests
        run: composer test -- --coverage-clover=coverage.xml

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        if: matrix.coverage != 'none'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          yml: ./codecov.yml
